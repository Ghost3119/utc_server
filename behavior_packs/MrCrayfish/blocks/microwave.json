//bridge-file-version: #167
{
	"format_version": "1.20.10",
	"minecraft:block": {
		"description": {
			"category": "Nature",
			"identifier": "cfm:microwave",
			"states": {
				"cfm:property": [
					false,
					true
				],
				"block:rotation": [
					2,
					3,
					4,
					5
				],
				"cfm:potato": [
					false,
					true
				],
				"cfm:baked_potato": [
					false,
					true
				],
				"cfm:beef": [
					false,
					true
				],
				"cfm:cooked_beef": [
					false,
					true
				]
			},
			"menu_category": {
				"category": "items",
				"group": "itemGroup.name.cfm_bathroom"
			}
		},
		"components": {
			"minecraft:geometry": {
				"identifier": "geometry.microwave",
				"bone_visibility": {
					"potato": "query.block_state('cfm:potato') == true",
					"baked_potato": "query.block_state('cfm:baked_potato') == true",
					"beef": "query.block_state('cfm:beef') == true",
					"cooked_beef": "query.block_state('cfm:cooked_beef') == true"
				}
			},
			"minecraft:map_color": "#FFFFFF",
			"minecraft:flammable": {
				"flame_odds": 1,
				"burn_odds": 1
			},
			"minecraft:on_player_destroyed": {
				"event": "remove:block",
				"target": "self"
			},
			"minecraft:material_instances": {
				"*": {
					"texture": "microwave",
					"render_method": "alpha_test"
				}
			},
			"minecraft:on_step_on": {
				"event": "step:on",
				"target": "self"
			},
			"minecraft:on_step_off": {
				"event": "step:off",
				"target": "self"
			},
			"minecraft:on_placed": {
				"event": "size:block",
				"target": "self"
			},
			"minecraft:on_fall_on": {
				"event": "fall:on",
				"target": "self"
			},
			"minecraft:queued_ticking": {
				"looping": true,
				"interval_range": [
					10,
					10
				],
				"on_tick": {
					"event": "on_tick",
					"target": "self"
				}
			},
			"minecraft:on_player_placing": {
				"event": "block:rotation"
			},
			"minecraft:loot": "loot_tables/microwave.json",
			"minecraft:on_interact": {
				"event": "food"
			},
			"minecraft:collision_box": {
				"origin": [
					7,
					0,
					5
				],
				"size": [
					-14,
					8,
					-10
				]
			},
			"minecraft:selection_box": {
				"origin": [
					7,
					0,
					5
				],
				"size": [
					-14,
					8,
					-10
				]
			},
			"minecraft:destructible_by_mining": {
				"seconds_to_destroy": 0.5
			},
			"minecraft:destructible_by_explosion": {
				"explosion_resistance": 10
			}
		},
		"events": {
			"remove:block": {},
			"size:block": {},
			"step:on": {},
			"step:off": {},
			"on_tick": {},
			"random:tick": {},
			"fall:on": {},
			"block:rotation": {
				"set_block_state": {
					"block:rotation": "query.cardinal_facing_2d"
				}
			},
			"food": {
				"sequence": [
					{
						"condition": "query.get_equipped_item_name == 'potato'",
						"set_block_state": {
							"cfm:potato": true
						},
						"decrement_stack": {},
						"run_command": {
							"command": [
								"playsound microwave_running @a[r=15] ~ ~ ~"
							]
						}
					},
					{
						"condition": "query.get_equipped_item_name == 'beef'",
						"set_block_state": {
							"cfm:beef": true
						},
						"decrement_stack": {},
						"run_command": {
							"command": [
								"playsound microwave_running @a[r=15] ~ ~ ~"
							]
						}
					},
					{
						"condition": "query.block_state('cfm:cooked_beef') == true",
						"spawn_loot": {
							"table": "loot_tables/cooked_beef.json"
						},
						"set_block_state": {
							"cfm:cooked_beef": false
						}
					},
					{
						"condition": "query.block_state('cfm:baked_potato') == true",
						"spawn_loot": {
							"table": "loot_tables/baked_potato.json"
						},
						"set_block_state": {
							"cfm:baked_potato": false
						}
					}
				]
			},
			"food_loot": {
				"sequence": [
					{
						"condition": "query.block_state('cfm:beef') == true",
						"set_block_state": {
							"cfm:cooked_beef": true,
							"cfm:beef": false
						},
						"run_command": {
							"command": [
								"playsound microwave_finish @a[r=15] ~ ~ ~"
							]
						}
					},
					{
						"condition": "query.block_state('cfm:potato') == true",
						"set_block_state": {
							"cfm:baked_potato": true,
							"cfm:potato": false
						},
						"run_command": {
							"command": [
								"playsound microwave_finish @a[r=15] ~ ~ ~"
							]
						}
					}
				]
			}
		},
		"permutations": [
			{
				"condition": "query.block_state('block:rotation') == 2",
				"components": {
					"minecraft:transformation": {
						"rotation": [
							0,
							0,
							0
						]
					}
				}
			},
			{
				"condition": "query.block_state('block:rotation') == 3",
				"components": {
					"minecraft:transformation": {
						"rotation": [
							0,
							180,
							0
						]
					}
				}
			},
			{
				"condition": "query.block_state('block:rotation') == 4",
				"components": {
					"minecraft:transformation": {
						"rotation": [
							0,
							90,
							0
						]
					}
				}
			},
			{
				"condition": "query.block_state('block:rotation') == 5",
				"components": {
					"minecraft:transformation": {
						"rotation": [
							0,
							-90,
							0
						]
					}
				}
			},
			{
				"condition": "query.block_state('cfm:beef') == true",
				"components": {
					"minecraft:queued_ticking": {
						"looping": true,
						"interval_range": [
							60,
							60
						],
						"on_tick": {
							"event": "food_loot"
						}
					},
					"minecraft:on_interact": {
						"event": "nothing"
					}
				}
			},
			{
				"condition": "query.block_state('cfm:cooked_beef') == true",
				"components": {
					"minecraft:on_interact": {
						"event": "food"
					}
				}
			},
			{
				"condition": "query.block_state('cfm:potato') == true",
				"components": {
					"minecraft:queued_ticking": {
						"looping": true,
						"interval_range": [
							60,
							60
						],
						"on_tick": {
							"event": "food_loot"
						}
					},
					"minecraft:on_interact": {
						"event": "nothing"
					}
				}
			},
			{
				"condition": "query.block_state('cfm:baked_potato') == true",
				"components": {
					"minecraft:on_interact": {
						"event": "food"
					}
				}
			}
		]
	}
}